# Generated by Django 2.2.2 on 2019-07-19 15:42

import os
import random
import string

from video_encoding.backends.ffmpeg import FFmpegBackend

from django.db import migrations
from django.conf import settings
from django.core.files.images import ImageFile

def init_categories(apps, schema_editor):
	Video = apps.get_model('streamer', 'Video')
	Category = apps.get_model('streamer', 'Category')
	Channel = apps.get_model('streamer', 'Channel')
	for n in range(1, 10):
		title = 'Dummy Video #{}'.format(n)
		description = 'Dummy video description.'
		status = 'public'
		file = settings.MEDIA_ROOT + '/dummyvideo.mp4'
		category = list(Category.objects.order_by('?'))[0]
		channel = list(Channel.objects.order_by('?'))[0]
		video = Video.objects.create(title=title, description=description, status=status, file=file, category=category, channel=channel)
		if not video.watch_id:
			new_watch_id = generate_watch_id()
			while Video.objects.filter(watch_id=new_watch_id).exists():
				new_watch_id = generate_watch_id
			video.watch_id = new_watch_id

		timestamp = 0.5
		tmp_thumbnail = FFmpegBackend().get_thumbnail(video_path=video.file.path, at_time=timestamp)
		filename = 'thumbnail_{}.jpg'.format(video.watch_id)
		full_path = os.path.join(settings.MEDIA_ROOT, filename)
		os.rename(tmp_thumbnail, full_path)
		f = open(full_path, 'rb')
		video.thumbnail.save(filename, ImageFile(f), save=False)
		f.close()

		video.save()

def generate_watch_id():
	chars = string.ascii_letters + string.digits
	length = 8
	return ''.join(random.choice(chars) for _ in range(length))

class Migration(migrations.Migration):

    dependencies = [
        ('streamer', '0003_vidhub_init_users'),
    ]

    operations = [
    	migrations.RunPython(init_categories),
    ]
